package naveen.myapplication;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.support.v4.content.FileProvider;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;

/**
 * Created by naveen on 07/07/16.
 */
public class DownloadActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_download);
        Button downloadButton= (Button) findViewById(R.id.downloadButton);
        Button filepathButton=(Button) findViewById(R.id.filepath);

        checkFile();
        downloadButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
          /*      String url = "https://raw.githubusercontent.com/ErNaveenSingh/ForT/master/Untitled1.png";
                DownloadManager.Request request = new DownloadManager.Request(Uri.parse(url));
                request.setDescription("Downloading File");
                request.setTitle("Untitled1.png");
// in order for this if to run, you must use the android 3.2 to compile your app
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
                    //request.allowScanningByMediaScanner();
                    request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_HIDDEN);
                }

                request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "Untitled1.png");

// get download service and enqueue file
                DownloadManager manager = (DownloadManager) getSystemService(Context.DOWNLOAD_SERVICE);

                manager.enqueue(request);*//*
                try {
                    productLookup();

                } catch (Exception e) {
                    e.printStackTrace();
                }*/

                new DownloadFilesTask().execute();

            }

        });


        filepathButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {

                File requestFile = new File(getFilesDir(), "EktaTest.png");
                /*
                 * Most file-related method calls need to be in
                 * try-catch blocks.
                 */
                // Use the FileProvider to get a content URI
                try {
//                    Uri fileUri = FileProvider.getUriForFile(
//                            getApplicationContext(),
//                            "naveen.myapplication.fileprovider",
//                            requestFile);
                    Uri fileUri = Uri.parse("content://naveen.myapplication/" + "EktaTest.png");
                    Toast.makeText(DownloadActivity.this, "URI is "+fileUri,Toast.LENGTH_LONG).show();


                    Intent intent = new Intent();
                    intent.setAction(Intent.ACTION_VIEW);
                    intent.setDataAndType(fileUri, "image/*");
                    startActivity(intent);
                } catch (Exception e) {
                    e.printStackTrace();
                    Log.e("File Selector",
                            "The selected file can't be shared: " +
                                    " EktaTest.jpg");
                }

            }
        });
    }


    private class DownloadFilesTask extends AsyncTask<URL, Integer, String> {
        protected String doInBackground(URL... urls) {
            InputStream input = null;
            FileOutputStream output = null;
            String outputName = "EktaTest.png";
            try {
                URL url = new URL("https://raw.githubusercontent.com/ErNaveenSingh/ForT/master/Untitled1.png");

                input = url.openConnection().getInputStream();
                output = openFileOutput(outputName, Context.MODE_PRIVATE);

                int read;
                byte[] data = new byte[1024];
                while ((read = input.read(data)) != -1)
                    output.write(data, 0, read);

                return outputName;

            }
            catch(IOException e) {
                e.printStackTrace();
            }
            return outputName;
        }

        protected void onProgressUpdate(Integer... progress) {
            //setProgressPercent(progress[0]);
        }

        protected void onPostExecute(String result) {
            checkFile();
        }
    }

    void checkFile() {
//        String dirpath = getFilesDir();
        File file = new File(getFilesDir(), "EktaTest.png");
        if (file.exists()) {

            Bitmap myBitmap = BitmapFactory.decodeFile(file.getAbsolutePath());

            ImageView fileimage = (ImageView) findViewById(R.id.fileimage);
            fileimage.setImageBitmap(myBitmap);

        } else {
            Toast.makeText(DownloadActivity.this, "No such image", Toast.LENGTH_LONG).show();
        }
    }
}


___________________________________________
Add Class
package naveen.myapplication;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.database.Cursor;
import android.net.Uri;
import android.os.ParcelFileDescriptor;

import java.io.File;
import java.io.FileNotFoundException;

public class MyProvider extends ContentProvider {

        @Override
        public ParcelFileDescriptor openFile(Uri uri, String mode) throws FileNotFoundException {
            File privateFile = new File(getContext().getFilesDir(), uri.getPath());
            return ParcelFileDescriptor.open(privateFile, ParcelFileDescriptor.MODE_READ_ONLY);
        }

        @Override
        public int delete(Uri arg0, String arg1, String[] arg2) {
            return 0;
        }

        @Override
        public String getType(Uri arg0) {
            return null;
        }

        @Override
        public Uri insert(Uri arg0, ContentValues arg1) {
            return null;
        }

        @Override
        public boolean onCreate() {
            return false;
        }

        @Override
        public Cursor query(Uri arg0, String[] arg1, String arg2, String[] arg3,
                            String arg4) {
            return null;
        }

        @Override
        public int update(Uri arg0, ContentValues arg1, String arg2, String[] arg3) {
            return 0;
        }
    }


___________________________________________
Add this code in Manifest

<provider
            android:name=".MyProvider"
            android:authorities="naveen.myapplication"
            android:exported="true">
        </provider>

___________________________________________
xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.tcs.downloadapp.DownloadActivity">



    <Button
        android:id="@+id/downloadButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Download"/>

    <Button
        android:id="@+id/filepath"
        android:layout_below="@id/downloadButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="FilePath"/>
    <ImageView
        android:id="@+id/fileimage"
        android:layout_width="wrap_content"
        android:layout_below="@id/filepath"
        android:layout_height="wrap_content"
        android:src="@drawable/ic_launcher"/>
</RelativeLayout>

        
        
        
        
        
        
